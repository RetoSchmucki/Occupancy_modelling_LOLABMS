
model {

# Priors 
# state model priors

psi ~ dunif(psi_min,psi_max)

for (t in 1:(nyear-1)) {
beta.phi1[t] ~ dunif(bphi_min, bphi_max)
beta.gam1[t] ~ dunif(bgam_min, bgam_max)

beta.phi2[t] ~ dunif(bphi_min, bphi_max)
beta.gam2[t] ~ dunif(bgam_min, bgam_max)

beta.phi3[t] ~ dunif(bphi_min, bphi_max)
beta.gam3[t] ~ dunif(bgam_min, bgam_max)

beta.phi4[t] ~ dunif(bphi_min, bphi_max)
beta.gam4[t] ~ dunif(bgam_min, bgam_max)
}

# observation model priors 
for (t in 1:nyear) {
	alpha.p[t] ~ dnorm(mu.lp, tau.lp)	# p random year intercept
} #t

mu.lp ~ dnorm(0, 0.01)
tau.lp <- 1 / (sd.lp * sd.lp)
sd.lp ~ dunif(0, 5)

bnm.p ~ dunif(bnm_min, bnm_max)
btl.p ~ dunif(btl_min, btl_max)


# beta.phi model priors 
for (t in 2:nyear) {
	beta.phi1[t-1] ~ mu1 + betaphi1*y[t-1] + epsilon[t-1]
  epsilon[t-1] ~ dnorm(0,tau1)
  } #t

mu1 ~ dnorm(0, 0.01)
betaphi1 ~ dnorm(0,0.01)I(-10,10)
sigma1 ~ dunif(0,10)
tau1 <- pow(sigma1,-2)
sigma1_2 <- pow(sigma1,2)


# State model
for (i in 1:nsite){
	z[i,1] ~ dbern(psi)	# occupancy (binomial)

	for (t in 2:nyear){
		muZ[i,t] <- z[i,t-1]*phi[i,t-1] + (1-z[i,t-1])*gam[i,t-1]
		
		logit(phi[i,t-1]) <- beta.phi1[t-1]*tidev_mat_zone[i,1] + beta.phi2[t-1]*tidev_mat_zone[i,2] + beta.phi3[t-1]*tidev_mat_zone[i,3] + beta.phi4[t-1]*tidev_mat_zone[i,4]
		
		logit(gam[i,t-1]) <- beta.gam1[t-1]*tidev_mat_zone[i,1] + beta.gam2[t-1]*tidev_mat_zone[i,2] + beta.gam3[t-1]*tidev_mat_zone[i,3] + beta.gam4[t-1]*tidev_mat_zone[i,4]
		
		z[i,t] ~ dbern(muZ[i,t])
	} #t

} #i

# Observation model 

for (t in 1:nyear){
	for(i in 1:nsite){
		for(j in 1:nvisit) {
		Py[i,j,t]<- z[i,t]*p[i,j,t]

		logit(p[i,j,t]) <- alpha.p[t] + bnm.p*NM[i,j,t] + btl.p*TL[i,1,1]	# NM:flight period, TL:transect length

		M[i,j,t] ~ dbern(Py[i,j,t])

		Presi[i,j,t] <- abs(M[i,j,t]-p[i,j,t])

		y.new[i,j,t] ~ dbern(Py[i,j,t])

		Presi.new[i,j,t] <- abs(y.new[i,j,t]-p[i,j,t])

		} #j
	}#i
}#t

# Derived parameters state model

# =======================================================

# Finite sample occupancy
for (t in 1:nyear) {
	psi.fs[t] <- sum(z[1:nsite,t])/nsite
}

# Finite sample occupancy ZONE
for (zo in 1:4){
	for (t in 1:nyear) {
	psi.fs_z[zo,t] <- sum(z[1:nsite,t] * tidev_mat_zone[1:nsite,zo]) / (sum(tidev_mat_zone[1:nsite,zo]) + 0.00000001)
	}
}

for (zo in 1:4){
	for (t in 1:nyear) {
	psi.suit_z[zo,t] <- sum(z[1:nsite,t] * tidev_mat_zone[1:nsite,zo] * SUITABLE[1:nsite,1]) / (sum(tidev_mat_zone[1:nsite,zo] * SUITABLE[1:nsite,1]) + 0.00000001)
	}
}

# Finite sample persistence ZONE suitable long

for (zo in 1:4){
	for (t in 1:nyear-1) {
		for (i in 1:nsite){
		OC_T1phi[zo,i,t] <- z[i,t] * tidev_mat_zone[i,zo] * SUITABLE[i,1]
		OC_T2phi[zo,i,t] <- z[i,t+1] * tidev_mat_zone[i,zo] * SUITABLE[i,1]
		}
	phi.suit_z[zo,t] <- sum((OC_T1phi[zo,1:nsite,t] + OC_T2phi[zo,1:nsite,t]) == 2) / (sum(OC_T1phi[zo,1:nsite,t]) + 0.00000001)
	}
}

# ==========================================================
# Finite sample colonization ZONE suitable long
for (zo in 1:4){
	for (t in 1:nyear-1) {
		for (i in 1:nsite){
		OC_T1gam[zo,i,t] <- z[i,t] * tidev_mat_zone[i,zo] * SUITABLE[i,1]
		OC_T2gam[zo,i,t] <- z[i,t+1] * tidev_mat_zone[i,zo] * SUITABLE[i,1]
		UC_T1gam[zo,i,t] <- (z[i,t]==0) * tidev_mat_zone[i,zo] * SUITABLE[i,1]
		}
	gam.suit_z[zo,t] <- sum(OC_T1gam[zo,1:nsite,t] < OC_T2gam[zo,1:nsite,t]) / (sum(UC_T1gam[zo,1:nsite,t]) + 0.00000001)
	}
}
# ==========================================================

# end of model formulation
}

